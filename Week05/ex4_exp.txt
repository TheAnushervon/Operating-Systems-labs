n_threads=2 Improvement: Doubling the number of threads from 1 to 2 resulted in a significant 
reduction in execution time, aligning with expected parallelization benefits.

Progressive Performance: With further increases in thread count, execution time consistently decreased.
This underscores the advantages of parallelization for efficient computation.

Efficiency Consideration: It's worth noting that while more threads can enhance performance, there's a point
of diminishing returns due to overhead. Finding the optimal thread count is essential for efficiency.

Distinct Approach: Exercise 4 differs from Exercise 3 by employing a fixed number of continuous threads,
reducing thread creation overhead. This contributes to its efficiency.